{"version":3,"sources":["../middleware/is-auth.js","../models/search_model.js","../controller/controller_search.js","../routes/router_search.js","app.js","index.js"],"names":["module","exports","req","res","next","mongoose","require","Schema","searchSchema","searchText","type","String","required","model","Search","getSearches","find","then","search","render","pageTitle","path","console","log","catch","err","express","isAuth","router","Router","searchController","get","html","app","url","connectionParams","useNewUrlParser","useUnifiedTopology","searchRoutes","connect","error","use","set","status","send","port","listen"],"mappings":"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","file":"index.js","sourceRoot":"..\\src","sourcesContent":["module.exports = (req, res, next) => {\r\n    next();\r\n  };","const mongoose = require('mongoose');\r\n\r\nvar Schema = mongoose.Schema;\r\n\r\nvar searchSchema = new Schema({\r\n  searchText: {\r\n    type: String,\r\n    required: true\r\n  }\r\n  //,\r\n  // price: {\r\n  //   type: Number,\r\n  //   required: true\r\n  // },\r\n  // description: {\r\n  //   type: String,\r\n  //   required: true\r\n  // },\r\n  // image: {\r\n  //   public_id: {\r\n  //     type: String\r\n  //   },\r\n  //   url: {\r\n  //     type: String,\r\n  //     required: true\r\n  //   }\r\n  // },\r\n  // userId: {\r\n  //   type: mongoose.Schema.Types.ObjectId,\r\n  //   required: true,\r\n  //   ref: 'User'\r\n  // }\r\n});\r\n\r\nmodule.exports = mongoose.model('Search', searchSchema);\r\n","// const fs = require('fs');\r\n// const path = require('path');\r\n// const PDFDocument = require('pdfkit');\r\nconst Search = require('../models/search_model');\r\n\r\n\r\n\r\nexports.getSearches = (req, res, next) => {\r\n  Search.find()\r\n        .then(search => {\r\n          res.render('search/index', {\r\n            search: search,\r\n            pageTitle: search,\r\n            path: '/'\r\n          });  \r\n        console.log(search);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // exports.addToSearches = (req, res, next) => {\r\n  //   const Search = new Search({\r\n  //     searchText: req.search.searchText\r\n  //   });\r\n  //   return order.save();\r\n  // };\r\n  ","const path = require('path');\r\nconst express = require('express');\r\nconst isAuth = require('../middleware/is-auth');\r\nconst router = express.Router();\r\nconst searchController = require(\"../controller/controller_search\");\r\nmodule.exports = router;\r\nrouter.get('/', isAuth, searchController.getSearches);\r\n//router.get('/', isAuth, searchController.addToSearch);","const express = require('express');\r\n\r\nconst html = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <title>A JavaScript project</title>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n</head>\r\n<body>\r\n  <h1>A JavaScript project</h1>\r\n</body>\r\n</html>`;\r\nconst app = express();\r\nconst mongoose = require('mongoose');\r\nconst url = `mongodb+srv://azatsoft:PUn38zyJUyuge5xG@cluster0.azu6g.gcp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;\r\nconst connectionParams={ useNewUrlParser: true, useUnifiedTopology: true }\r\nconst searchRoutes = require(\"../routes/router_search\");\r\n\r\nmongoose.connect(url,connectionParams)\r\n    .then( () => {\r\n        console.log('Connected to database ')\r\n    })\r\n    .catch( (err) => {\r\n        console.error(`Error connecting to the database. \\n${err}`);\r\n    });\r\napp.use(searchRoutes);\r\n//app.use(express.static(path.join(__dirname, \"public\")));\r\napp.set(\"view engine\", \"ejs\");\r\napp.set(\"views\", \"views\");\r\n\r\napp.get('/', (req, res) => {\r\n  res.set('Content-Type', 'text/html');\r\n  res.status(200).send(html);\r\n});\r\n\r\nmodule.exports = app;","const app = require('./app');\r\n\r\nconst port = '8888';\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is listening on port ${port}...`);\r\n});"]}